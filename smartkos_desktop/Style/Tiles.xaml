<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                    xmlns:local="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                    xmlns:animation="clr-namespace:SourceChord.FluentWPF.Animations;assembly=FluentWPF">
    <fw:RelativePositionConverter x:Key="relativePositionConverter" />

    <Style x:Key="TilesRevealStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#80808080" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="root" CornerRadius="10" Background="{TemplateBinding Background}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                             To="0" Duration="0:0:0.600">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                             To="0.5" Duration="0:0:0.600">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                             To="0.5" Duration="0:0:0.600">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverLight"
                                                             To="0" Duration="0:0:0.100">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight"
                                                             To="1" Duration="0:0:0.100">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                            <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush"
                                                             From="100" To="50" Duration="0:0:0.300">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush"
                                                             To="500" BeginTime="0:0:0.500" Duration="0:0:4.000">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush"
                                                             From="100" To="50" Duration="0:0:0.300">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush"
                                                             To="500" BeginTime="0:0:0.500" Duration="0:0:4.000">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="brush"
                                                             To="0" BeginTime="0:0:0.500" Duration="0:0:4.000">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <animation:BrushAnimation Storyboard.TargetProperty="(TextElement.Foreground)" Storyboard.TargetName="contentPresenter"
                                                                      Duration="0:0:0.100" AutoReverse="False">
                                                <animation:BrushAnimation.To>
                                                    <SolidColorBrush Color="#FF838383"/>
                                                </animation:BrushAnimation.To>
                                                <animation:BrushAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </animation:BrushAnimation.EasingFunction>
                                            </animation:BrushAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="border"
                                                             To="0" Duration="0:0:0.100" AutoReverse="False">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="backgroundBorder"
                                    Opacity="0"
                                    CornerRadius="10">
                                <Grid ClipToBounds="True">
                                    <Border x:Name="hoverLight" Background="{local:RevealBrush Color=White, Size = 200,Opacity=0.6}" />
                                    <Rectangle x:Name="pressLight" Opacity="0">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush x:Name="brush" MappingMode="Absolute" RadiusY="5" RadiusX="5">
                                                <RadialGradientBrush.Center>
                                                    <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(local:PointerTracker.RootObject)"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(local:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.Center>
                                                <RadialGradientBrush.GradientOrigin>
                                                    <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(local:PointerTracker.RootObject)"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(local:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.GradientOrigin>
                                                <GradientStop Color="Transparent" Offset="0"/>
                                                <GradientStop Color="#88FFFFFF" Offset="0.5"/>
                                                <GradientStop Color="Transparent" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Border>

                            <!-- Content -->
                            <Border BorderBrush="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>

                            <!-- MouseOver border -->
                            <Border x:Name="border"
                                    BorderBrush="{local:RevealBrush Color=White,Size=120,Opacity=0.3}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10">
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="root" Property="Background" Value="#BB808080"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
</ResourceDictionary>